2025-07-10 21:38:52.203 | Received CallToolRequest: {
2025-07-10 21:38:52.203 |   method: 'tools/call',
2025-07-10 21:38:52.203 |   params: {
2025-07-10 21:38:52.203 |     name: 'create-server-from-template',
2025-07-10 21:38:52.203 |     arguments: { language: 'python' }
2025-07-10 21:38:52.203 |   }
2025-07-10 21:38:52.203 | }
2025-07-10 21:38:52.204 | Created symlink to node_modules in /tmp/mcp-create-servers/535b9530-ad33-4f79-a077-0bdd0f936d80
2025-07-10 21:38:52.204 | Current PATH: /usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
2025-07-10 21:38:52.204 | Current NODE_PATH: /app/node_modules
2025-07-10 21:38:52.206 | Found command python3 at /usr/bin/python3
2025-07-10 21:38:52.206 | Creating MCP transport: /usr/bin/python3 /tmp/mcp-create-servers/535b9530-ad33-4f79-a077-0bdd0f936d80/server.py
2025-07-10 21:38:52.239 | {"result":{"content":[{"type":"text","text":"{\"serverId\":\"535b9530-ad33-4f79-a077-0bdd0f936d80\",\"message\":\"Serveur créé à partir du modèle python\"}"}]},"jsonrpc":"2.0","id":28}
2025-07-10 21:38:52.239 | Connected to server 535b9530-ad33-4f79-a077-0bdd0f936d80
2025-07-10 21:38:52.242 | Server 535b9530-ad33-4f79-a077-0bdd0f936d80 transport error: ZodError: [
2025-07-10 21:38:52.242 |   {
2025-07-10 21:38:52.242 |     "code": "invalid_union",
2025-07-10 21:38:52.242 |     "unionErrors": [
2025-07-10 21:38:52.242 |       {
2025-07-10 21:38:52.242 |         "issues": [
2025-07-10 21:38:52.242 |           {
2025-07-10 21:38:52.242 |             "code": "invalid_union",
2025-07-10 21:38:52.242 |             "unionErrors": [
2025-07-10 21:38:52.242 |               {
2025-07-10 21:38:52.242 |                 "issues": [
2025-07-10 21:38:52.242 |                   {
2025-07-10 21:38:52.242 |                     "code": "invalid_type",
2025-07-10 21:38:52.242 |                     "expected": "string",
2025-07-10 21:38:52.242 |                     "received": "undefined",
2025-07-10 21:38:52.242 |                     "path": [
2025-07-10 21:38:52.242 |                       "id"
2025-07-10 21:38:52.242 |                     ],
2025-07-10 21:38:52.242 |                     "message": "Required"
2025-07-10 21:38:52.242 |                   }
2025-07-10 21:38:52.242 |                 ],
2025-07-10 21:38:52.242 |                 "name": "ZodError"
2025-07-10 21:38:52.242 |               },
2025-07-10 21:38:52.242 |               {
2025-07-10 21:38:52.242 |                 "issues": [
2025-07-10 21:38:52.242 |                   {
2025-07-10 21:38:52.242 |                     "code": "invalid_type",
2025-07-10 21:38:52.242 |                     "expected": "number",
2025-07-10 21:38:52.242 |                     "received": "undefined",
2025-07-10 21:38:52.242 |                     "path": [
2025-07-10 21:38:52.242 |                       "id"
2025-07-10 21:38:52.242 |                     ],
2025-07-10 21:38:52.242 |                     "message": "Required"
2025-07-10 21:38:52.242 |                   }
2025-07-10 21:38:52.242 |                 ],
2025-07-10 21:38:52.242 |                 "name": "ZodError"
2025-07-10 21:38:52.242 |               }
2025-07-10 21:38:52.242 |             ],
2025-07-10 21:38:52.242 |             "path": [
2025-07-10 21:38:52.242 |               "id"
2025-07-10 21:38:52.242 |             ],
2025-07-10 21:38:52.242 |             "message": "Invalid input"
2025-07-10 21:38:52.242 |           },
2025-07-10 21:38:52.242 |           {
2025-07-10 21:38:52.242 |             "code": "invalid_type",
2025-07-10 21:38:52.242 |             "expected": "string",
2025-07-10 21:38:52.242 |             "received": "undefined",
2025-07-10 21:38:52.242 |             "path": [
2025-07-10 21:38:52.242 |               "method"
2025-07-10 21:38:52.242 |             ],
2025-07-10 21:38:52.242 |             "message": "Required"
2025-07-10 21:38:52.242 |           },
2025-07-10 21:38:52.242 |           {
2025-07-10 21:38:52.242 |             "code": "unrecognized_keys",
2025-07-10 21:38:52.242 |             "keys": [
2025-07-10 21:38:52.243 |               "error"
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "path": [],
2025-07-10 21:38:52.243 |             "message": "Unrecognized key(s) in object: 'error'"
2025-07-10 21:38:52.243 |           }
2025-07-10 21:38:52.243 |         ],
2025-07-10 21:38:52.243 |         "name": "ZodError"
2025-07-10 21:38:52.243 |       },
2025-07-10 21:38:52.243 |       {
2025-07-10 21:38:52.243 |         "issues": [
2025-07-10 21:38:52.243 |           {
2025-07-10 21:38:52.243 |             "code": "invalid_type",
2025-07-10 21:38:52.243 |             "expected": "string",
2025-07-10 21:38:52.243 |             "received": "undefined",
2025-07-10 21:38:52.243 |             "path": [
2025-07-10 21:38:52.243 |               "method"
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "message": "Required"
2025-07-10 21:38:52.243 |           },
2025-07-10 21:38:52.243 |           {
2025-07-10 21:38:52.243 |             "code": "unrecognized_keys",
2025-07-10 21:38:52.243 |             "keys": [
2025-07-10 21:38:52.243 |               "error"
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "path": [],
2025-07-10 21:38:52.243 |             "message": "Unrecognized key(s) in object: 'error'"
2025-07-10 21:38:52.243 |           }
2025-07-10 21:38:52.243 |         ],
2025-07-10 21:38:52.243 |         "name": "ZodError"
2025-07-10 21:38:52.243 |       },
2025-07-10 21:38:52.243 |       {
2025-07-10 21:38:52.243 |         "issues": [
2025-07-10 21:38:52.243 |           {
2025-07-10 21:38:52.243 |             "code": "invalid_union",
2025-07-10 21:38:52.243 |             "unionErrors": [
2025-07-10 21:38:52.243 |               {
2025-07-10 21:38:52.243 |                 "issues": [
2025-07-10 21:38:52.243 |                   {
2025-07-10 21:38:52.243 |                     "code": "invalid_type",
2025-07-10 21:38:52.243 |                     "expected": "string",
2025-07-10 21:38:52.243 |                     "received": "undefined",
2025-07-10 21:38:52.243 |                     "path": [
2025-07-10 21:38:52.243 |                       "id"
2025-07-10 21:38:52.243 |                     ],
2025-07-10 21:38:52.243 |                     "message": "Required"
2025-07-10 21:38:52.243 |                   }
2025-07-10 21:38:52.243 |                 ],
2025-07-10 21:38:52.243 |                 "name": "ZodError"
2025-07-10 21:38:52.243 |               },
2025-07-10 21:38:52.243 |               {
2025-07-10 21:38:52.243 |                 "issues": [
2025-07-10 21:38:52.243 |                   {
2025-07-10 21:38:52.243 |                     "code": "invalid_type",
2025-07-10 21:38:52.243 |                     "expected": "number",
2025-07-10 21:38:52.243 |                     "received": "undefined",
2025-07-10 21:38:52.243 |                     "path": [
2025-07-10 21:38:52.243 |                       "id"
2025-07-10 21:38:52.243 |                     ],
2025-07-10 21:38:52.243 |                     "message": "Required"
2025-07-10 21:38:52.243 |                   }
2025-07-10 21:38:52.243 |                 ],
2025-07-10 21:38:52.243 |                 "name": "ZodError"
2025-07-10 21:38:52.243 |               }
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "path": [
2025-07-10 21:38:52.243 |               "id"
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "message": "Invalid input"
2025-07-10 21:38:52.243 |           },
2025-07-10 21:38:52.243 |           {
2025-07-10 21:38:52.243 |             "code": "invalid_type",
2025-07-10 21:38:52.243 |             "expected": "object",
2025-07-10 21:38:52.243 |             "received": "undefined",
2025-07-10 21:38:52.243 |             "path": [
2025-07-10 21:38:52.243 |               "result"
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "message": "Required"
2025-07-10 21:38:52.243 |           },
2025-07-10 21:38:52.243 |           {
2025-07-10 21:38:52.243 |             "code": "unrecognized_keys",
2025-07-10 21:38:52.243 |             "keys": [
2025-07-10 21:38:52.243 |               "error"
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "path": [],
2025-07-10 21:38:52.243 |             "message": "Unrecognized key(s) in object: 'error'"
2025-07-10 21:38:52.243 |           }
2025-07-10 21:38:52.243 |         ],
2025-07-10 21:38:52.243 |         "name": "ZodError"
2025-07-10 21:38:52.243 |       },
2025-07-10 21:38:52.243 |       {
2025-07-10 21:38:52.243 |         "issues": [
2025-07-10 21:38:52.243 |           {
2025-07-10 21:38:52.243 |             "code": "invalid_union",
2025-07-10 21:38:52.243 |             "unionErrors": [
2025-07-10 21:38:52.243 |               {
2025-07-10 21:38:52.243 |                 "issues": [
2025-07-10 21:38:52.243 |                   {
2025-07-10 21:38:52.243 |                     "code": "invalid_type",
2025-07-10 21:38:52.243 |                     "expected": "string",
2025-07-10 21:38:52.243 |                     "received": "undefined",
2025-07-10 21:38:52.243 |                     "path": [
2025-07-10 21:38:52.243 |                       "id"
2025-07-10 21:38:52.243 |                     ],
2025-07-10 21:38:52.243 |                     "message": "Required"
2025-07-10 21:38:52.243 |                   }
2025-07-10 21:38:52.243 |                 ],
2025-07-10 21:38:52.243 |                 "name": "ZodError"
2025-07-10 21:38:52.243 |               },
2025-07-10 21:38:52.243 |               {
2025-07-10 21:38:52.243 |                 "issues": [
2025-07-10 21:38:52.243 |                   {
2025-07-10 21:38:52.243 |                     "code": "invalid_type",
2025-07-10 21:38:52.243 |                     "expected": "number",
2025-07-10 21:38:52.243 |                     "received": "undefined",
2025-07-10 21:38:52.243 |                     "path": [
2025-07-10 21:38:52.243 |                       "id"
2025-07-10 21:38:52.243 |                     ],
2025-07-10 21:38:52.243 |                     "message": "Required"
2025-07-10 21:38:52.243 |                   }
2025-07-10 21:38:52.243 |                 ],
2025-07-10 21:38:52.243 |                 "name": "ZodError"
2025-07-10 21:38:52.243 |               }
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "path": [
2025-07-10 21:38:52.243 |               "id"
2025-07-10 21:38:52.243 |             ],
2025-07-10 21:38:52.243 |             "message": "Invalid input"
2025-07-10 21:38:52.243 |           }
2025-07-10 21:38:52.243 |         ],
2025-07-10 21:38:52.243 |         "name": "ZodError"
2025-07-10 21:38:52.243 |       }
2025-07-10 21:38:52.243 |     ],
2025-07-10 21:38:52.243 |     "path": [],
2025-07-10 21:38:52.243 |     "message": "Invalid input"
2025-07-10 21:38:52.243 |   }
2025-07-10 21:38:52.243 | ]
2025-07-10 21:38:52.243 |     at get error [as error] (file:///app/node_modules/zod/lib/index.mjs:587:31)
2025-07-10 21:38:52.243 |     at ZodUnion.parse (file:///app/node_modules/zod/lib/index.mjs:663:22)
2025-07-10 21:38:52.243 |     at deserializeMessage (file:///app/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/stdio.js:26:33)
2025-07-10 21:38:52.243 |     at ReadBuffer.readMessage (file:///app/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/stdio.js:19:16)
2025-07-10 21:38:52.243 |     at StdioClientTransport.processReadBuffer (file:///app/node_modules/@modelcontextprotocol/sdk/dist/esm/client/stdio.js:114:50)
2025-07-10 21:38:52.243 |     at Socket.<anonymous> (file:///app/node_modules/@modelcontextprotocol/sdk/dist/esm/client/stdio.js:93:22)
2025-07-10 21:38:52.243 |     at Socket.emit (node:events:524:28)
2025-07-10 21:38:52.243 |     at addChunk (node:internal/streams/readable:561:12)
2025-07-10 21:38:52.243 |     at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)
2025-07-10 21:38:52.243 |     at Readable.push (node:internal/streams/readable:392:5) {
2025-07-10 21:38:52.243 |   issues: [
2025-07-10 21:38:52.243 |     {
2025-07-10 21:38:52.243 |       code: 'invalid_union',
2025-07-10 21:38:52.243 |       unionErrors: [Array],
2025-07-10 21:38:52.243 |       path: [],
2025-07-10 21:38:52.243 |       message: 'Invalid input'
2025-07-10 21:38:52.243 |     }
2025-07-10 21:38:52.243 |   ],
2025-07-10 21:38:52.243 |   addIssue: [Function (anonymous)],
2025-07-10 21:38:52.243 |   addIssues: [Function (anonymous)],
2025-07-10 21:38:52.243 |   errors: [
2025-07-10 21:38:52.243 |     {
2025-07-10 21:38:52.243 |       code: 'invalid_union',
2025-07-10 21:38:52.243 |       unionErrors: [Array],
2025-07-10 21:38:52.243 |       path: [],
2025-07-10 21:38:52.243 |       message: 'Invalid input'
2025-07-10 21:38:52.243 |     }
2025-07-10 21:38:52.243 |   ]
2025-07-10 21:38:52.243 | }
2025-07-10 21:38:59.402 | Received CallToolRequest: {
2025-07-10 21:38:59.402 |   method: 'tools/call',
2025-07-10 21:38:59.402 |   params: { name: 'list-servers', arguments: {} }
2025-07-10 21:38:59.402 | }
2025-07-10 21:38:59.402 | {"result":{"content":[{"type":"text","text":"{\"servers\":[]}"}]},"jsonrpc":"2.0","id":29}
2025-07-10 21:39:08.504 | Received CallToolRequest: {
2025-07-10 21:39:08.504 |   method: 'tools/call',
2025-07-10 21:39:08.504 |   params: {
2025-07-10 21:39:08.504 |     name: 'create-server-from-template',
2025-07-10 21:39:08.504 |     arguments: {
2025-07-10 21:39:08.504 |       code: 'import { Server } from "@modelcontextprotocol/sdk/server/index.js";\n' +
2025-07-10 21:39:08.504 |         'import { StdioServerTransport } from "@modelcontextprotocol/sdk/server/stdio.js";\n' +
2025-07-10 21:39:08.504 |         'import { \n' +
2025-07-10 21:39:08.504 |         '  CallToolRequestSchema, \n' +
2025-07-10 21:39:08.504 |         '  ListToolsRequestSchema \n' +
2025-07-10 21:39:08.504 |         '} from "@modelcontextprotocol/sdk/types.js";\n' +
2025-07-10 21:39:08.504 |         '\n' +
2025-07-10 21:39:08.504 |         'const server = new Server({\n' +
2025-07-10 21:39:08.504 |         '  name: "validation-debug",\n' +
2025-07-10 21:39:08.504 |         '  version: "1.0.0"\n' +
2025-07-10 21:39:08.504 |         '}, {\n' +
2025-07-10 21:39:08.504 |         '  capabilities: {\n' +
2025-07-10 21:39:08.504 |         '    tools: {}\n' +
2025-07-10 21:39:08.504 |         '  }\n' +
2025-07-10 21:39:08.504 |         '});\n' +
2025-07-10 21:39:08.504 |         '\n' +
2025-07-10 21:39:08.504 |         'server.setRequestHandler(ListToolsRequestSchema, async () => {\n' +
2025-07-10 21:39:08.504 |         '  return {\n' +
2025-07-10 21:39:08.504 |         '    tools: [{\n' +
2025-07-10 21:39:08.504 |         '      name: "test_missing_params",\n' +
2025-07-10 21:39:08.504 |         '      description: "Test what happens with missing required params",\n' +
2025-07-10 21:39:08.504 |         '      inputSchema: {\n' +
2025-07-10 21:39:08.504 |         '        type: "object",\n' +
2025-07-10 21:39:08.504 |         '        properties: {\n' +
2025-07-10 21:39:08.504 |         '          required_param: { type: "string" }\n' +
2025-07-10 21:39:08.504 |         '        },\n' +
2025-07-10 21:39:08.504 |         '        required: ["required_param"]\n' +
2025-07-10 21:39:08.504 |         '      }\n' +
2025-07-10 21:39:08.504 |         '    }]\n' +
2025-07-10 21:39:08.504 |         '  };\n' +
2025-07-10 21:39:08.504 |         '});\n' +
2025-07-10 21:39:08.504 |         '\n' +
2025-07-10 21:39:08.504 |         'server.setRequestHandler(CallToolRequestSchema, async (request) => {\n' +
2025-07-10 21:39:08.504 |         '  if (request.params.name === "test_missing_params") {\n' +
2025-07-10 21:39:08.504 |         '    const param = request.params.arguments.required_param as string;\n' +
2025-07-10 21:39:08.504 |         '    return {\n' +
2025-07-10 21:39:08.504 |         '      content: [{\n' +
2025-07-10 21:39:08.504 |         '        type: "text",\n' +
2025-07-10 21:39:08.504 |         '        text: `Received param: "${param}"`\n' +
2025-07-10 21:39:08.504 |         '      }]\n' +
2025-07-10 21:39:08.504 |         '    };\n' +
2025-07-10 21:39:08.504 |         '  }\n' +
2025-07-10 21:39:08.504 |         '  throw new Error(`Tool not found: ${request.params.name}`);\n' +
2025-07-10 21:39:08.504 |         '});\n' +
2025-07-10 21:39:08.504 |         '\n' +
2025-07-10 21:39:08.504 |         'const transport = new StdioServerTransport();\n' +
2025-07-10 21:39:08.504 |         'server.connect(transport);',
2025-07-10 21:39:08.504 |       language: 'typescript'
2025-07-10 21:39:08.504 |     }
2025-07-10 21:39:08.504 |   }
2025-07-10 21:39:08.504 | }
2025-07-10 21:39:08.505 | Created symlink to node_modules in /tmp/mcp-create-servers/46957f0e-1f63-46b3-812f-756b84a07c0e
2025-07-10 21:39:08.506 | Current PATH: /usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
2025-07-10 21:39:08.506 | Current NODE_PATH: /app/node_modules
2025-07-10 21:39:08.507 | Found command npx at /usr/local/bin/npx
2025-07-10 21:39:08.507 | Using command path for npx: /usr/local/bin/npx
2025-07-10 21:39:08.507 | Compiling TypeScript: npx tsc --allowJs /tmp/mcp-create-servers/46957f0e-1f63-46b3-812f-756b84a07c0e/index.ts --outDir /tmp/mcp-create-servers/46957f0e-1f63-46b3-812f-756b84a07c0e --target ES2020 --module NodeNext --moduleResolution NodeNext --esModuleInterop --skipLibCheck --resolveJsonModule
2025-07-10 21:39:11.018 | TypeScript compilation successful
2025-07-10 21:39:11.018 | Found command node at /usr/local/bin/node
2025-07-10 21:39:11.018 | Creating MCP transport: /usr/local/bin/node /tmp/mcp-create-servers/46957f0e-1f63-46b3-812f-756b84a07c0e/index.js
2025-07-10 21:39:11.074 | {"result":{"content":[{"type":"text","text":"{\"serverId\":\"46957f0e-1f63-46b3-812f-756b84a07c0e\",\"message\":\"Serveur créé à partir du code personnalisé en typescript\"}"}]},"jsonrpc":"2.0","id":30}
2025-07-10 21:39:11.074 | Connected to server 46957f0e-1f63-46b3-812f-756b84a07c0e
2025-07-10 21:39:15.379 | Received CallToolRequest: {
2025-07-10 21:39:15.379 |   method: 'tools/call',
2025-07-10 21:39:15.379 |   params: {
2025-07-10 21:39:15.379 |     name: 'execute-tool',
2025-07-10 21:39:15.379 |     arguments: {
2025-07-10 21:39:15.379 |       args: {},
2025-07-10 21:39:15.379 |       serverId: '46957f0e-1f63-46b3-812f-756b84a07c0e',
2025-07-10 21:39:15.379 |       toolName: 'test_missing_params'
2025-07-10 21:39:15.379 |     }
2025-07-10 21:39:15.379 |   }
2025-07-10 21:39:15.379 | }
2025-07-10 21:39:15.380 | {"result":{"content":[{"type":"text","text":"{\"content\":[{\"type\":\"text\",\"text\":\"Received param: \\\"undefined\\\"\"}]}"}]},"jsonrpc":"2.0","id":31}
2025-07-10 21:39:19.399 | Received CallToolRequest: {
2025-07-10 21:39:19.399 |   method: 'tools/call',
2025-07-10 21:39:19.399 |   params: {
2025-07-10 21:39:19.399 |     name: 'delete-server',
2025-07-10 21:39:19.399 |     arguments: { serverId: '46957f0e-1f63-46b3-812f-756b84a07c0e' }
2025-07-10 21:39:19.399 |   }
2025-07-10 21:39:19.399 | }
2025-07-10 21:39:19.399 | Server 46957f0e-1f63-46b3-812f-756b84a07c0e transport closed
2025-07-10 21:39:19.401 | Server 46957f0e-1f63-46b3-812f-756b84a07c0e transport closed
2025-07-10 21:39:19.401 | {"result":{"content":[{"type":"text","text":"{\"success\":true,\"message\":\"Server 46957f0e-1f63-46b3-812f-756b84a07c0e deleted\"}"}]},"jsonrpc":"2.0","id":32}